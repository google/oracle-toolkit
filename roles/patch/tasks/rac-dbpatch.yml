# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: rac-dbpatch | Determine if upgrade mode is required
  set_fact:
    startup_upgrade: "{% set c = rdbms_patches | json_query('[?release==`' + oracle_rel + '`]') | json_query('[?upgrade==`true`].patchnum') %}{% if c | length > 0 %}upgrade{% endif %}"
  tags: patch_rdbms

- name: rac-dbpatch | Set cluster_database to false
  shell: |
    set -o pipefail
    sqlplus -s / as sysdba <<< "alter system set cluster_database=false scope=spfile;"
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  become: true
  become_user: "{{ oracle_user }}"
  tags: patch_rdbms,cluster-mode

- name: rac-dbpatch | Shutdown DB
  shell: |
    set -o pipefail
    srvctl stop db -d {{ db_name }} -o immediate
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  register: shutdown_db
  become: true
  become_user: "{{ oracle_user }}"
  tags: patch_rdbms,upgrade_db

- name: rac-dbpatch | Start instance
  shell: |
    set -o pipefail
    sqlplus -s / as sysdba <<< "startup {{ startup_upgrade }};"
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  register: startup_db
  become: true
  become_user: "{{ oracle_user }}"
  tags: patch_rdbms,upgrade_db

- name: rac-dbpatch | Start all PDBs
  shell: |
    set -o pipefail
    sqlplus -s / as sysdba << EOF
    begin
      for c in (select 1 from v\$system_parameter2 where name = 'enable_pluggable_database' and value = 'TRUE')
    loop
      execute immediate 'alter pluggable database all open {{ startup_upgrade }}';
    end loop;
    end;
    /
    EOF
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  register: startup_pdb
  ignore_errors: true
  become: true
  become_user: "{{ oracle_user }}"
  when: oracle_ver != '11.2.0.4.0'
  tags: patch_rdbms,start_pdb

- name: rac-dbpatch | Run datapatch
  shell: |
    {{ oracle_home }}/OPatch/datapatch -verbose
  environment:
    ORACLE_SID: "{{ oracle_sid }}"
    ORACLE_HOME: "{{ oracle_home }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  when: oracle_ver != '11.2.0.4.0'
  register: datapatch_output
  ignore_errors: true
  become: true
  become_user: "{{ oracle_user }}"
  tags: patch_rdbms,datapatch

- name: rac-dbpatch | Datapatch results
  debug:
    var: datapatch_output.stdout_lines
    verbosity: 0
  when: oracle_ver != '11.2.0.4.0'
  tags: patch_rdbms,datapatch

- name: rac-dbpatch | Run catbundle
  shell: |
    set -o pipefail
    sqlplus -s / as sysdba <<< "@catbundle.sql psu apply"
  args:
    chdir: "{{ oracle_home }}/rdbms/admin"
  environment:
    ORACLE_SID: "{{ oracle_sid }}"
    ORACLE_HOME: "{{ oracle_home }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  when: oracle_ver == '11.2.0.4.0'
  register: catbundle_output
  failed_when: "catbundle_output.rc != 0"
  become: true
  become_user: "{{ oracle_user }}"
  tags: patch_rdbms,catbundle

- name: rac-dbpatch | Catbundle results
  debug:
    var: catbundle_output
    verbosity: 0
  when: oracle_ver == '11.2.0.4.0'
  tags: patch_rdbms,catbundle

- name: rac-dbpatch | Re-compile invalid objects
  shell: |
    set -o pipefail
    sqlplus -s / as sysdba <<< "@?/rdbms/admin/utlrp;"
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  become: true
  become_user: "{{ oracle_user }}"
  tags: patch_rdbms,utlrp

- name: rac-dbpatch | Capture registry patches
  shell: |
    set -o pipefail
    sqlplus -s / as sysdba << EOF
    set pages 0 lines 200
    col action_time for a28
    col action for a10
    col status for a10
    col description for a80
    select description, action_time, action, status, patch_id from dba_registry_sqlpatch order by action_time;
    EOF
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  when: oracle_ver != '11.2.0.4.0'
  register: patch_registry
  become: true
  become_user: "{{ oracle_user }}"
  tags: patch_rdbms

- name: rac-dbpatch | Registry patch results
  debug:
    var: patch_registry.stdout_lines
    verbosity: 0
  when: oracle_ver != '11.2.0.4.0'

- name: rac-dbpatch | Set cluster_database to true
  shell: |
    set -o pipefail
    sqlplus -s / as sysdba <<< "alter system set cluster_database=true scope=spfile;"
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  become: true
  become_user: "{{ oracle_user }}"
  tags: patch_rdbms,cluster-mode

- name: rac-dbpatch | Stop instance, start database
  shell: |
    set -o pipefail
    srvctl stop instance -i {{ oracle_sid }} -d {{ db_name }} ; \
    srvctl start db -d {{ db_name }} ;
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  register: restart_db
  become: true
  become_user: "{{ oracle_user }}"
  tags: patch_rdbms,upgrade_db

- name: rac-dbpatch | Start all PDBs
  shell: |
    set -o pipefail
    sqlplus -s / as sysdba << EOF
    begin
      for c in (select 1 from v\$system_parameter2 where name = 'enable_pluggable_database' and value = 'TRUE')
    loop
      execute immediate 'alter pluggable database all open';
    end loop;
    end;
    /
    EOF
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  register: startup_pdb
  ignore_errors: true
  become: true
  become_user: "{{ oracle_user }}"
  when: oracle_ver != '11.2.0.4.0'
  tags: patch_rdbms,start_pdb

- name: rac-dbpatch | Run datapatch second time
  shell: |
    {{ oracle_home }}/OPatch/datapatch -verbose
  environment:
    ORACLE_SID: "{{ oracle_sid }}"
    ORACLE_HOME: "{{ oracle_home }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  when: oracle_ver != '11.2.0.4.0'
  register: datapatch_output2
  ignore_errors: true
  become: true
  become_user: "{{ oracle_user }}"
  tags: patch_rdbms,datapatch

- name: rac-dbpatch | Datapatch results for second time
  debug:
    var: datapatch_output2.stdout_lines
    verbosity: 0
  when: oracle_ver != '11.2.0.4.0'
  tags: patch_rdbms,datapatch

- name: rac-dbpatch | Re-compile invalid objects, second time
  shell: |
    set -o pipefail
    sqlplus -s / as sysdba <<< "@?/rdbms/admin/utlrp;"
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  become: true
  become_user: "{{ oracle_user }}"
  tags: patch_rdbms,utlrp

- name: rac-dbpatch | Close and open all PDBs for second time
  shell: |
    set -o pipefail
    sqlplus -s / as sysdba << EOF
    begin
      for c in (select 1 from v\$system_parameter2 where name = 'enable_pluggable_database' and value = 'TRUE')
    loop
      execute immediate 'alter pluggable database all close';
      execute immediate 'alter pluggable database all open';
    end loop;
    end;
    /
    EOF
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  register: restart_pdb
  ignore_errors: true
  become: true
  become_user: "{{ oracle_user }}"
  when: oracle_ver != '11.2.0.4.0'
  tags: patch_rdbms,start_pdb
