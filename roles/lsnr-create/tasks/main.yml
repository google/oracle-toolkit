# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Open listener port in firewall
  firewalld:
    port: "{{ listener_port }}/tcp"
    permanent: true
    immediate: true
    state: enabled
  become: true
  register: firewall_output
  failed_when:
    - "'firewall is not currently running' not in firewall_output.msg"
    - "'Permanent and Non-Permanent(immediate) operation' not in firewall_output.msg"
  when: not disable_firewall | bool
  tags: lsnr-create

- name: Test whether port is free
  become: true
  become_user: root
  shell: "set -o pipefail; netstat -lnpt | ( grep {{ listener_port }} || true ) | wc -l"
  changed_when: false
  when: create_listener
  register: lsnr_port_check
  tags: lsnr-create

- name: Check if listener has already been created
  become: true
  become_user: root
  shell: "set -o pipefail; ps -ef | ( grep [t]ns ||true ) | ( grep -w {{ listener_name }} || true ) | wc -l"
  changed_when: false
  when: create_listener
  register: lsnr_name_check
  tags: lsnr-create

- name: Listener check results
  debug:
    msg: "{{ item }}"
    verbosity: 1
  with_items:
    - "{{ lsnr_port_check }}"
    - "{{ lsnr_name_check }}"
  when: create_listener
  tags: lsnr-create

- name: Create listener via srvctl
  become: true
  become_user: "{{ grid_user }}"
  shell: |
    export PATH={{ grid_home }}/bin:${PATH}
    srvctl add listener -l {{ listener_name }} -p {{ listener_port }} -o {{ grid_home }}
    srvctl start listener -l {{ listener_name }}
    srvctl config listener -l {{ listener_name }}
    srvctl status listener -l {{ listener_name }}
  register: lsnr_output
  when:
    - create_listener
    - lsnr_port_check.stdout == "0"
    - lsnr_name_check.stdout == "0"
    - not free_edition
  tags: lsnr-create

- name: Listener creation output
  debug:
    msg:
      - "{{ lsnr_output.cmd }}"
      - "{{ lsnr_output.stdout_lines }}"
    verbosity: 0
  when: lsnr_output.cmd is defined
  tags: lsnr-create

- name: Create listener via netca
  become: true
  become_user: "{{ oracle_user }}"
  shell: |
    set -o pipefail
    {{ oracle_home }}/bin/netca                                      \
      /orahome {{ oracle_home }}                                     \
      /instype typical                                               \
      /inscomp client,oraclenet,javavm,server,ano                    \
      /insprtcl tcp                                                  \
      /cfg local                                                     \
      /authadp NO_VALUE                                              \
      /responseFile {{ oracle_home }}/network/install/netca_typ.rsp  \
      /silent                                                        \
      /listenerparameters DEFAULT_SERVICE={{ oracle_sid }}           \
      /lisport {{ listener_port }}
  register: lsnr_output_netca
  when:
    - create_listener
    - lsnr_port_check.stdout == "0"
    - lsnr_name_check.stdout == "0"
    - free_edition
  tags: lsnr-create

- name: Listener creation output from netca
  debug:
    msg:
      - "{{ lsnr_output_netca.cmd }}"
      - "{{ lsnr_output_netca.stdout_lines }}"
    verbosity: 0
  when: lsnr_output_netca.cmd is defined
  tags: lsnr-create
