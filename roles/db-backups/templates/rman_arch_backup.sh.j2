#!/bin/bash
#
# Example: ./rman_arch_backup.sh ORCL 2 7
#
# Variables
#
ora_inst_name=${1}                       # Instance name-- should match /etc/oratab
arch_redundancy=${2}                     # Archivelog redundancy
arch_day_online=${3}                     # Number of days to keep
ts="date +%Y-%m-%d_%H-%M-%S"             # Timestamp format
start_ts="$($ts)"                        # Start timestamp
log_dir="{{ logs_dir }}/${ora_inst_name}" # A directory for the logs - per database
type="ARCH"                              # Type is archivelog backup
conn_str="{% if oracle_ver == "11.2.0.4.0" %}/{% else %}/ AS SYSBACKUP{% endif %}" # Oracle connection string
backup_dest="{{ backup_dest }}/${ora_inst_name}" # Per-database backup destination path
fra_dest="{{ reco_destination }}"        # Fast recovery area location
export NLS_DATE_FORMAT="YYYY-MM-DD HH24:MI:SS"
#
if [[ $# -ne 3 ]]; then
  echo "Usage: $0 ora_inst_name arch_redundancy arch_day_online" >&1
  exit 1
fi

#
# Check if $log_dir exists; if not, we create it
#
if [[ ! -d "${log_dir}" ]]; then
  if mkdir -p "${log_dir}"; then
    printf "\n\t%s\n\n" "INFO -- $($ts) -- ${log_dir} successfully created."
  else
    printf "\n\t%s\n\n" "ERROR -- $($ts) -- Impossible to create ${log_dir}; we wont be able to log this backup."
  fi
fi
# If FRA is not a file system, add the ASM "+" sign (if not already added)
if [[ "${fra_dest:0:1}" != "/" && "${fra_dest:0:1}" != "+" ]]; then
  fra_dest="+${fra_dest}"
fi
# Standardize the backup destination format
if [[ "${backup_dest:0:1}" == "/" ]]; then
  # Filesystem destination - no prefix needed
  backup_dest_final="${backup_dest}"
else
  # ASM destination - add "+" prefix if not already present
  if [[ "${backup_dest:0:1}" != "+" ]]; then
    backup_dest_final="+${backup_dest}"
  else
    backup_dest_final="${backup_dest}"
  fi
fi

# Always use proper format specifiers for both filesystem and ASM destinations
autobackup_format="${backup_dest_final}/${ora_inst_name}_%F"
channel_format="${backup_dest_final}/${ora_inst_name}_${type}_%U"
#
# We can now build the output file and log file names
#
outfile="${log_dir}/rman_${start_ts}_${type}.out"
logfile="${log_dir}/rman_${start_ts}_${type}.log"
#
# Set the Oracle env
#
export ORACLE_SID="${ora_inst_name}"
source oraenv <<<"${ora_inst_name}" >/dev/null 2>&1
#
# RMAN backup
#
if "${ORACLE_HOME}/bin/rman" >>"${outfile}" <<EOF
  set echo on
  spool log to '${logfile}'
  connect target '${conn_str}'

  configure controlfile autobackup on;
  configure device type disk parallelism 4;

  configure controlfile autobackup format for device type disk to '${autobackup_format}';
  configure channel device type disk format '${channel_format}';
  configure snapshot controlfile name to '${fra_dest}/snapcf_${ora_inst_name}.f';

  configure archivelog deletion policy to backed up ${arch_redundancy} times to disk;
  run {
    crosscheck archivelog all;
    backup check logical archivelog all not backed up ${arch_redundancy} times;
    delete noprompt archivelog all backed up ${arch_redundancy} times to disk completed before 'SYSDATE-${arch_day_online}';
  }
  spool log off
EOF
#
# Success or error output with the name of the logfile
#
then
  printf "\n\t%s\n" "INFO -- $($ts) -- ${type} backup of instance ${ora_inst_name} has been completed successfully."
  printf "\t%s\n\n" "INFO -- $($ts) -- logfile used by this session: ${logfile}"
  ret_code=0
else
  printf "\n\t%s\n\n" "ERROR -- $($ts) --  ${type} backup of instance ${ora_inst_name} had errors, please have a look at the logfile: ${logfile}"
  ret_code=123
fi
exit ${ret_code}
#
#****************************************************************************************#
#                       E N D      O F       S O U R C E                                *#
#****************************************************************************************#
