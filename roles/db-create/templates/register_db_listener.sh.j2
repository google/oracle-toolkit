#!/bin/bash
# Generated by Oracle Toolkit - Database Listener Registration Script

# Environment is passed through environment variables from Ansible
# ORACLE_HOME, ORACLE_SID, PATH, DB_NAME, LISTENER_NAME, LISTENER_PORT, 
# PDB_PREFIX, PDB_COUNT, ORACLE_VER, DB_CONTAINER

# Get FQDN for better host resolution
HOST_NAME=$(hostname -f 2>/dev/null || hostname)

# Verify ORACLE_HOME is set
if [ -z "$ORACLE_HOME" ]; then
  echo "ERROR: ORACLE_HOME environment variable is not set."
  exit 1
fi

# Verify ORACLE_SID is set
if [ -z "$ORACLE_SID" ]; then
  echo "ERROR: ORACLE_SID environment variable is not set."
  exit 1
fi

# Create tnsnames.ora entry if it doesn't exist
if [ ! -f $ORACLE_HOME/network/admin/tnsnames.ora ] || ! grep -q "^$DB_NAME" $ORACLE_HOME/network/admin/tnsnames.ora; then
  mkdir -p $ORACLE_HOME/network/admin
  
  echo "# TNS Entry for $DB_NAME created by Oracle Toolkit" >> $ORACLE_HOME/network/admin/tnsnames.ora
  echo "$DB_NAME =" >> $ORACLE_HOME/network/admin/tnsnames.ora
  echo "  (DESCRIPTION =" >> $ORACLE_HOME/network/admin/tnsnames.ora
  echo "    (ADDRESS = (PROTOCOL = TCP)(HOST = ${HOST_NAME})(PORT = ${LISTENER_PORT}))" >> $ORACLE_HOME/network/admin/tnsnames.ora
  echo "    (CONNECT_DATA =" >> $ORACLE_HOME/network/admin/tnsnames.ora
  echo "      (SERVER = DEDICATED)" >> $ORACLE_HOME/network/admin/tnsnames.ora
  echo "      (SERVICE_NAME = ${DB_NAME})" >> $ORACLE_HOME/network/admin/tnsnames.ora
  echo "    )" >> $ORACLE_HOME/network/admin/tnsnames.ora
  echo "  )" >> $ORACLE_HOME/network/admin/tnsnames.ora
  echo "" >> $ORACLE_HOME/network/admin/tnsnames.ora
  
  echo "Created tnsnames.ora entry for $DB_NAME"
fi

# If there's a PDB, add the PDB entry as well
if [[ "$ORACLE_VER" != "11.2.0.4.0" && "$DB_CONTAINER" == "TRUE" ]]; then
  for i in $(seq 1 ${PDB_COUNT}); do
    PDB_NAME="${PDB_PREFIX}$i"
    if ! grep -q "^$PDB_NAME" $ORACLE_HOME/network/admin/tnsnames.ora; then
      echo "# TNS Entry for $PDB_NAME created by Oracle Toolkit" >> $ORACLE_HOME/network/admin/tnsnames.ora
      echo "$PDB_NAME =" >> $ORACLE_HOME/network/admin/tnsnames.ora
      echo "  (DESCRIPTION =" >> $ORACLE_HOME/network/admin/tnsnames.ora
      echo "    (ADDRESS = (PROTOCOL = TCP)(HOST = ${HOST_NAME})(PORT = ${LISTENER_PORT}))" >> $ORACLE_HOME/network/admin/tnsnames.ora
      echo "    (CONNECT_DATA =" >> $ORACLE_HOME/network/admin/tnsnames.ora
      echo "      (SERVER = DEDICATED)" >> $ORACLE_HOME/network/admin/tnsnames.ora
      echo "      (SERVICE_NAME = $PDB_NAME)" >> $ORACLE_HOME/network/admin/tnsnames.ora
      echo "    )" >> $ORACLE_HOME/network/admin/tnsnames.ora
      echo "  )" >> $ORACLE_HOME/network/admin/tnsnames.ora
      echo "" >> $ORACLE_HOME/network/admin/tnsnames.ora
      
      echo "Created tnsnames.ora entry for $PDB_NAME"
    fi
  done
fi

# Verify database is running before attempting to register
DB_STATUS=$(
$ORACLE_HOME/bin/sqlplus -s / as sysdba << EOF
set heading off
set feedback off
set pagesize 0
select 'DATABASE_STATUS=OPEN' from v\$database where open_mode = 'READ WRITE';
exit;
EOF
)

# Register services with the listener
if [[ "$DB_STATUS" == *"DATABASE_STATUS=OPEN"* ]]; then
  echo "Registering database services with listener..."
  
  # First check if listener is running
  LISTENER_STATUS=$($ORACLE_HOME/bin/lsnrctl status $LISTENER_NAME 2>/dev/null)
  LISTENER_RUNNING=$?
  
  if [ $LISTENER_RUNNING -eq 0 ]; then
    # Listener is running, register the database
    REGISTER_RESULT=$(
    $ORACLE_HOME/bin/sqlplus -s / as sysdba << EOF
ALTER SYSTEM REGISTER;
exit;
EOF
    )
    
    if [ $? -eq 0 ]; then
      echo "Successfully registered database with listener"
      
      # Verify service registration
      sleep 5  # Wait for registration to complete
      SERVICE_CHECK=$($ORACLE_HOME/bin/lsnrctl status $LISTENER_NAME | grep -i "Service \"$ORACLE_SID\"")
      
      if [ $? -eq 0 ]; then
        echo "Verified service $ORACLE_SID is registered with listener"
      else
        echo "WARNING: Service $ORACLE_SID not showing in listener services. Will retry registration."
        RETRY_RESULT=$(
        $ORACLE_HOME/bin/sqlplus -s / as sysdba << EOF
ALTER SYSTEM REGISTER;
exit;
EOF
        )
      fi
    else
      echo "WARNING: Failed to register database with listener"
      exit 1
    fi
  else
    echo "WARNING: Listener $LISTENER_NAME is not running. Will try to start it."
    
    # Try to start the listener
    $ORACLE_HOME/bin/lsnrctl start $LISTENER_NAME
    
    if [ $? -eq 0 ]; then
      echo "Successfully started listener. Registering database."
      START_RESULT=$(
      $ORACLE_HOME/bin/sqlplus -s / as sysdba << EOF
ALTER SYSTEM REGISTER;
exit;
EOF
      )
      
      if [ $? -eq 0 ]; then
        echo "Successfully registered database with listener after starting it"
      else
        echo "WARNING: Failed to register database with listener after starting it"
      fi
    else
      echo "WARNING: Failed to start listener. Database will not be registered."
    fi
  fi
else
  echo "WARNING: Database not open. Skipping listener registration."
fi

exit 0