# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: rac-db-create | Test whether pmon process by same name already exists
  shell: "set -o pipefail; ps -ef | ( grep pmon || true ) | ( grep -i {{ db_name }} || true ) | ( grep -v grep || true ) | wc -l"
  changed_when: false
  register: pmon_proc
  tags: rac-db-create

- name: rac-db-create | Check if database is already in oratab
  shell: "set -o pipefail; ( grep -i {{ db_name }}: /etc/oratab || true ) | wc -l"
  changed_when: false
  register: check_oratab
  tags: rac-db-create

- name: rac-db-create | Database exists check results
  debug:
    msg: "{{ item }}"
    verbosity: 1
  with_items:
    - "{{ pmon_proc }}"
    - "{{ check_oratab }}"
  tags: rac-db-create


- name: rac-db-create | Adjust instance memory values (not 11.2 or 12.1)
  set_fact:
    sga_target: "{{ ora_sga_target_mb }}M"
    pga_target: "{{ ora_pga_target_mb }}M"
  when: oracle_ver not in ['11.2.0.4.0','12.1.0.2.0']
  tags: db-create

- name: rac-db-create | Adjust instance memory values (11.2 and 12.1)
  set_fact:
    sga_target: "{{ ora_sga_target_mb }}000000"
    pga_target: "{{ ora_pga_target_mb }}000000"
  when: oracle_ver in ['11.2.0.4.0','12.1.0.2.0']
  tags: rac-db-create

- name: rac-db-create | Set password parameter
  set_fact:
    pass_param: "{{ pwgen_path }}/{{ pwgen_file }} 16 'AaBbCc12345'"
  tags: rac-db-create

- name: rac-db-create | Generate random passwords
  set_fact:
    pwd_gen_cmd: echo -e "$({{ pass_param }})\n$({{ pass_param }}){% if oracle_ver != "11.2.0.4.0" %}\n$({{ pass_param }}){% endif %}"
  tags: rac-db-create

- name: rac-db-create | List of database directories to adjust
  set_fact:
    change_dirs:
      - "{{ oracle_base }}/admin"
      - "{{ oracle_base }}/audit"
  tags: rac-db-create

- name: rac-db-create | Adjust directories
  become: true
  become_user: root
  file:
    path: "{{ item.1 }}"
    state: directory
    mode: g+w
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
  delegate_to: "{{ item.0 }}"
  loop: "{{ query('inventory_hostnames', 'dbasm') | product(change_dirs) | list }}"
  tags: rac-db-create

- name: rac-db-create | Adjust local DBCA directory
  become: true
  become_user: root
  file:
    path: "{{ oracle_base }}/cfgtoollogs/dbca"
    state: directory
    mode: g+w
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
  tags: rac-db-create

- name: rac-db-create | Set CV_ASSUME_DISTID to OEL7 when installing on RHEL8  # MOS Note 3017836.1
  set_fact:
    cv_distid: "{{ 'OEL7' if ansible_os_family == 'RedHat'
                           and (ansible_distribution_major_version | int) >= 8
                           and (oracle_ver_base | float) <= 19.3
                           else '' }}"
  tags: rac-db-create

- name: rac-db-create | Create DBCA response file
  become: true
  become_user: root
  template:
    src: rac-dbca.rsp{% if oracle_ver == '11.2.0.4.0' %}.{{ oracle_ver }}{% endif %}.sh.j2
    dest: "{{ swlib_unzip_path }}/dbca_{{ db_name }}.rsp.sh"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
  when: pmon_proc.stdout == "0" and check_oratab.stdout == "0"
  tags: rac-db-create

- name: rac-db-create | Run DBCA response file script
  block:
    - name: rac-db-create | Run DBCA
      become: true
      become_user: "{{ oracle_user }}"
      environment:
        CV_ASSUME_DISTID: "{{ cv_distid }}"
      shell: |
        set -o pipefail
        export PATH={{ oracle_home }}/bin:${PATH}:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin
        {{ pwd_gen_cmd }} | sh {{ swlib_unzip_path }}/dbca_{{ db_name }}.rsp.sh
      register: dbca_output
      failed_when: "'Completing Database Creation' not in dbca_output.stdout or '100% complete' not in dbca_output.stdout"
      when: pmon_proc.stdout == "0" and check_oratab.stdout == "0"
      tags: rac-db-create
  rescue:
    - name: rac-db-create | Retrieve DBCA logs
      slurp:
        src: "{{ oracle_base }}/cfgtoollogs/dbca/{{ db_name }}/{{ db_name }}.log"
      register: dbcalog
    - debug:
        msg: "{{ dbcalog['content'] | b64decode }}"

- name: rac-db-create | DBCA output
  debug:
    msg: "{{ dbca_output | default('') }}"
  tags: rac-db-create

- name: rac-db-create | Save PDBs state
  shell: |
    set -o pipefail
    sqlplus / as sysdba << EOF
    alter pluggable database all save state;
    EOF
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  when:
    - oracle_ver != '11.2.0.4.0'
    - pdb_prefix is defined
  become: true
  become_user: "{{ oracle_user }}"
  tags: rac-db-create,pdbs-state

- name: rac-db-create | Get SID on the node
  shell: |
    set -o pipefail
    export ORACLE_HOME={{ oracle_home }}
    export PATH=${ORACLE_HOME}/bin:${PATH}:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin
    {% if oracle_ver == '11.2.0.4.0' %}srvctl status instance -d {{ db_name }} -n {{ ansible_hostname }} -v |awk '{ print $2 }'{% else %}srvctl status db -d {{ db_name }} -sid{% endif %}
  become: true
  become_user: "{{ oracle_user }}"
  changed_when: false
  register: sid_node
  tags: rac-db-create

- name: rac-db-create | Add instance to oratab
  lineinfile:
    path: /etc/oratab
    regexp: '^{{ sid_node.stdout }}\:'
    line: "{{ sid_node.stdout }}:{{ oracle_home }}:N"
  become: true
  tags: rac-db-create

# Run the block of tasks to patch database to the latest release
- name: rac-db-create | Blocks of tasks if release is not base
  vars:
    startup_upgrade: upgrade
  when: oracle_rel != "base"
  tags: rac-db-create,newdb-datapatch
  block:
    - name: rac-db-create | Set cluster_database to false
      shell: |
        set -o pipefail
        sqlplus -s / as sysdba <<< "alter system set cluster_database=false scope=spfile;"
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      become: true
      become_user: "{{ oracle_user }}"

    - name: rac-db-create | Stop database
      shell: |
        set -o pipefail
        srvctl stop db -d {{ db_name }} -o immediate
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      register: shutdown_db
      become: true
      become_user: "{{ oracle_user }}"

    - name: rac-db-create | Startup upgrade
      shell: |
        set -o pipefail
        sqlplus -s / as sysdba <<< "startup {{ startup_upgrade }};"
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      register: startup_db
      become: true
      become_user: "{{ oracle_user }}"

    - name: rac-db-create | Open pluggable databases in upgrade mode
      shell: |
        set -o pipefail
        sqlplus -s / as sysdba << EOF
        begin
          for c in (select 1 from v\$system_parameter2 where name = 'enable_pluggable_database' and value = 'TRUE')
        loop
          execute immediate 'alter pluggable database all open {{ startup_upgrade }}';
        end loop;
        end;
        /
        EOF
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      when: oracle_ver != '11.2.0.4.0'
      ignore_errors: true
      become: true
      become_user: "{{ oracle_user }}"

    - name: rac-db-create | Run datapatch
      shell: |
        {{ oracle_home }}/OPatch/datapatch -verbose
      environment:
        ORACLE_SID: "{{ oracle_sid }}"
        ORACLE_HOME: "{{ oracle_home }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      when: oracle_ver != '11.2.0.4.0'
      register: datapatch_output
      ignore_errors: true
      become: true
      become_user: "{{ oracle_user }}"

    - name: rac-db-create | Show datapatch results
      debug:
        var: datapatch_output.stdout_lines
      when: oracle_ver != '11.2.0.4.0'

    - name: rac-db-create | Set cluster_database to true
      shell: |
        set -o pipefail
        sqlplus -s / as sysdba <<< "alter system set cluster_database=true scope=spfile;"
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      become: true
      become_user: "{{ oracle_user }}"

    - name: rac-db-create | Restart database
      shell: |
        set -o pipefail
        srvctl stop instance -i {{ oracle_sid }} -d {{ db_name }} ; \
        srvctl start db -d {{ db_name }} ;
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      register: restart_db
      become: true
      become_user: "{{ oracle_user }}"

    - name: rac-db-create | Close and open pluggable databases
      shell: |
        set -o pipefail
        sqlplus -s / as sysdba << EOF
        begin
          for c in (select 1 from v\$system_parameter2 where name = 'enable_pluggable_database' and value = 'TRUE')
        loop
          execute immediate 'alter pluggable database all close';
          execute immediate 'alter pluggable database all open';
        end loop;
        end;
        /
        EOF
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      ignore_errors: true
      become: true
      become_user: "{{ oracle_user }}"
      when: oracle_ver != '11.2.0.4.0'

    - name: rac-db-create | Show pluggable databases
      shell: |
        set -o pipefail
        sqlplus -s / as sysdba << EOF
        show pdbs
        EOF
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      ignore_errors: true
      become: true
      become_user: "{{ oracle_user }}"
      when: oracle_ver != '11.2.0.4.0'
