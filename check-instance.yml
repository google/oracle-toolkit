# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Playbook pre_tasks
  hosts: dbasm
  gather_facts: false
  pre_tasks:
    - name: Check environment readiness
      include_role:
        name: common
        tasks_from: readiness_checks.yml
      vars:
        control_node_checks: true
        managed_host_checks: true
        become_user_check: root
      tags: readiness_checks

  tasks:
    - name: Test connectivity to target instance via ping
      ping:
      register: pingrc

    - name: Abort if ping module fails
      assert:
        that: "pingrc.ping == 'pong'"
        fail_msg: >-
          The instance does not have an usable python distribution
        success_msg: >-
          The instance has an usable python installation, continuing

    - name: Collect facts from target
      setup:

    - name: Test privilege escalation on target
      raw: sudo -u root whoami
      register: rawrc
      changed_when: false

    - name: Fail if unable to sudo to root on target
      assert:
        that: "'root' in rawrc.stdout_lines"
        fail_msg: "The account {{ ansible_user }} used to connect does not have sudo privileges to root"
        success_msg: "The account {{ ansible_user }} used to connect has sudo root privileges, continuing"

    - name: Check for Python installation
      raw: test -e /usr/bin/python || test -e /usr/bin/python3
      changed_when: false
      failed_when: false
      register: check_python

    - name: Install Python if required
      raw: sudo yum -y install python3
      when: check_python.rc != 0
