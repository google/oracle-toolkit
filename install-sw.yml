# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Playbook pre_tasks
  hosts: dbasm
  gather_facts: false
  pre_tasks:
    - name: Check environment readiness
      include_role:
        name: common
        tasks_from: readiness_checks.yml
      vars:
        control_node_checks: true
        managed_host_checks: true
        become_user_check: root
      tags: readiness_checks
    - name: Determine specific release
      include_role:
        name: common
        tasks_from: populate-vars.yml

- hosts: dbasm
  remote_user: "{{ grid_user }}"
  become: true
  become_user: root
  roles:
    - role: gi-setup
      when:
        - gi_install
        - cluster_type in ("NONE", "DG")
  tags: gi-setup

- hosts: dbasm
  remote_user: "{{ oracle_user }}"
  become: true
  become_user: root
  roles:
    - role: rdbms-setup
      when:
        - install_rdbms | bool
        - cluster_type in ("NONE", "DG")
  tags: rdbms-setup

- hosts: dbasm
  tasks:
    - name: rac-gi-install | defaults from common
      include_vars:
        dir: roles/common/defaults
    - name: rac-gi-install | open firewall
      include_role:
        name: rac-lsnr-firewall
      when: cluster_type == "RAC"
  tags: lsnr-firewall

- hosts: dbasm
  serial: 1
  tasks:
    - name: rac-gi-install | defaults from common
      include_vars:
        dir: roles/common/defaults
    - name: rac-gi-install | setup ssh keys
      include_role:
        name: ssh-setup
      vars:
        ssh_user: "{{ grid_user }}"
        user_group: "{{ oracle_group }}"
        ssh_nodes: "{{ groups['dbasm'] }}"
      when: cluster_type == "RAC"
  tags: rac-gi,ssh-keys

- hosts: dbasm[0]
  remote_user: "{{ grid_user }}"
  become: true
  become_user: root
  tasks:
    - name: rac-gi-install | defaults from common
      include_vars:
        dir: roles/common/defaults
    - name: rac-gi-install | GI installation
      include_role:
        name: rac-gi-setup
        # if 11.2 or 12.1 then rac-gi-install-<oracle_ver>.yml otherwise rac-gi-install.yml
        tasks_from: rac-gi-install{% if oracle_ver_base in ('11.2', '12.1') %}-{{ oracle_ver }}{% endif %}.yml
        # tasks_from: rac-gi-install.yml
        public: true
      loop:
        - "{{ gi_software | default([]) | json_query('[?version==`' + oracle_ver + '`].files[*].name') | join() }}"
      loop_control:
        loop_var: osw_files
      when: cluster_type == "RAC"
  tags: rac-gi

- hosts: dbasm
  serial: 1
  tasks:
    - name: rac-db-install | defaults from common
      include_vars:
        dir: roles/common/defaults
    - name: rac-db-install | setup ssh keys
      include_role:
        name: ssh-setup
      vars:
        ssh_user: "{{ oracle_user }}"
        user_group: "{{ oracle_group }}"
        ssh_nodes: "{{ groups['dbasm'] }}"
      when: cluster_type == "RAC"
  tags: rac-db,ssh-keys

- hosts: dbasm[0]
  remote_user: "{{ oracle_user }}"
  become: true
  become_user: root
  tasks:
    - name: rac-db-install | defaults from common
      include_vars:
        dir: roles/common/defaults
    - name: rac-db-install | RDBMS installation
      include_role:
        name: rac-db-setup
        # if 11.2 or 12.1 then rac-db-install-<oracle_ver>.yml otherwise rac-db-install.yml
        tasks_from: rac-db-install{% if oracle_ver_base in ('11.2', '12.1') %}-11.2-12.1{% endif %}.yml
        public: true
      loop:
        - "{{ rdbms_software | json_query('[?version==`' + oracle_ver + '`].files[*].name') | join() }}"
      loop_control:
        loop_var: osw_files
      when: cluster_type == "RAC"
  tags: rac-db

- hosts: dbasm
  tasks:
    - include_role:
        name: patch-vulns
        tasks_from: main
  tags: patch-vulns

- hosts: dbasm
  remote_user: "{{ oracle_user }}"
  become: true
  become_user: root
  tasks:
    - name: Run swlib post-installation ownership fix
      include_role:
        name: swlib
        tasks_from: post-installation.yml
      tags: fix-swlib-ownership
